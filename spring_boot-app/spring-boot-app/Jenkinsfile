pipeline {
    environment {
		dockerimagename = "registry.prashanthgr.private:5000/spring-boot-app:${IMG_TAG}"
		dockerImage = ""
		image = "spring-boot-app"
		TAG_1 = "${IMG_TAG}"
		

    SONAR_URL = "http://192.168.1.118:9000" 
		SSH_ARG="-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -q"
	}
  agent any

  stages{
    stage('Git checkout'){
      steps{
        script{
          git branch: 'main', credentialsId: 'Github', url: 'https://github.com/prashanthgrebel/CICD-Automation.git'
        }
      }
    }
    stage('Build and test'){
      steps{
        sh '''
          cd spring_boot-app/spring-boot-app
          mvn clean package
          '''
      }
    }
    stage('SonarQube Code Analysis'){
      steps{
        withCredentials([string(credentialsId: 'SonarQube', variable: 'SONAR_AUTH_TOKEN')]) {
        sh 'cd spring_boot-app/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Building Docker Image'){
      steps{
        sh 'cd spring_boot-app/spring-boot-app && sudo docker build -t ${dockerimagename} .'
      }
    }
    stage('Pushing image to Docker registry'){
      steps{
        sh '''
          sudo docker tag $dockerimagename  $dockerimagename
          sudo docker push $dockerimagename
        '''
      }
    }
    stage('Updating Deployment manifest file'){
      steps{
        sh '''
          echo "copy files to 2ndory repo"
          sudo cp  spring_boot-app/spring-boot-app-manifests/*.yml /home/prashanthg/Dev_Ops-Projects/CICD_Automation_TEST/CICD-Automation_ArgoCD-K8s/spring-boot-app
          
          echo "updating file using sed"
          sudo sed -i "s/TAG/${TAG_1}/g" /home/prashanthg/Dev_Ops-Projects/CICD_Automation_TEST/CICD-Automation_ArgoCD-K8s/spring-boot-app/deployment.yml
          
          echo "verfify the updates"
          sudo cat /home/prashanthg/Dev_Ops-Projects/CICD_Automation_TEST/CICD-Automation_ArgoCD-K8s/spring-boot-app/deployment.yml | grep -i 'image'
        '''
      }

    }
    stage('pusshing manifest to remote repo'){
      steps{
        sh '''
          cd /home/prashanthg/Dev_Ops-Projects/CICD_Automation_TEST/CICD-Automation_ArgoCD-K8s/spring-boot-app/
          sudo chown prashanthg:sudo *
          sudo git config --global --add safe.directory /home/prashanthg/Dev_Ops-Projects/CICD_Automation_TEST/CICD-Automation_ArgoCD-K8s
          sudo git status
          sudo git add deployment.yml
          sudo git commit -m \"Deploy versrion ${TAG_1}\"
          sudo git push 

        '''
      }
    }
    stage('Deleting Old IMG from jenkins server'){
      steps{
        sh '''
          sudo docker rmi registry.prashanthgr.private:5000/spring-boot-app:${IMG_DEL}
        '''
      }
    }


  }

}
