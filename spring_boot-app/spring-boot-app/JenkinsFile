pipeline {
    environment {
		dockerimagename = "registry.prashanthgr.private:5000/spring-boot-app:${IMG_TAG}"
		dockerImage = ""
		image = "spring-boot-app"
		

    SONAR_URL = "http://192.168.1.118:9000" 
		SSH_ARG="-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -q"
	}
  agent any

  stages{
    stage('Git checkout'){
      steps{
        script{
          git branch: 'main', credentialsId: 'Github', url: 'https://github.com/prashanthgrebel/CICD-Automation.git'
        }
      }
    }
    stage('Build and test'){
      steps{
        sh '''
          cd spring_boot-app/spring-boot-app
          mvn clean package
          '''
      }
    }
    stage('SonarQube Code Analysis'){
      steps{
        withCredentials([string(credentialsId: 'SonarQube', variable: 'SONAR_AUTH_TOKEN')]) {
        sh 'cd spring_boot-app/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Building Docker Image'){
      steps{
        sh 'cd spring_boot-app/spring-boot-app && sudo docker build -t ${dockerimagename} .'
      }
    }

  }

}